{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/svenhumburg/Projekte/graphql/pages/api/graphql.ts"],"sourcesContent":["// pages/api/graphql.ts\nimport { ApolloServer, gql } from 'apollo-server-micro';\nimport Cors from 'micro-cors';\n\nconst cors = Cors({\n  origin: '*', \n  allowMethods: ['POST', 'GET', 'OPTIONS'],\n  allowHeaders: ['Content-Type'],\n  allowCredentials: true,\n});\n\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\nconst resolvers = {\n  Query: {\n    hello: () => 'Hallo von GraphQL auf Vercel!',\n  },\n};\n\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers,\n});\n\nconst startServer = apolloServer.start();\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n};\n\nconst handler = async (req: any, res: any) => {\n  if (req.method === 'OPTIONS') {\n    res.end(); // schnell auf preflight reagieren\n    return;\n  }\n\n  await startServer;\n  await apolloServer.createHandler({ path: '/api/graphql' })(req, res);\n};\n\nexport default cors(handler);"],"names":[],"mappings":"AAAA,uBAAuB;;;;;AACvB;AACA;;;AAEA,MAAM,OAAO,CAAA,GAAA,mHAAA,CAAA,UAAI,AAAD,EAAE;IAChB,QAAQ;IACR,cAAc;QAAC;QAAQ;QAAO;KAAU;IACxC,cAAc;QAAC;KAAe;IAC9B,kBAAkB;AACpB;AAEA,MAAM,WAAW,2IAAA,CAAA,MAAG,CAAC;;;;AAIrB,CAAC;AAED,MAAM,YAAY;IAChB,OAAO;QACL,OAAO,IAAM;IACf;AACF;AAEA,MAAM,eAAe,IAAI,2IAAA,CAAA,eAAY,CAAC;IACpC;IACA;AACF;AAEA,MAAM,cAAc,aAAa,KAAK;AAE/B,MAAM,SAAS;IACpB,KAAK;QACH,YAAY;IACd;AACF;AAEA,MAAM,UAAU,OAAO,KAAU;IAC/B,IAAI,IAAI,MAAM,KAAK,WAAW;QAC5B,IAAI,GAAG,IAAI,kCAAkC;QAC7C;IACF;IAEA,MAAM;IACN,MAAM,aAAa,aAAa,CAAC;QAAE,MAAM;IAAe,GAAG,KAAK;AAClE;uCAEe,KAAK","debugId":null}}]
}